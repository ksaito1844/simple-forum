{"version":3,"sources":["services/blogs.js","components/Blogs/BlogListStyles.js","components/common/SortBar/SortBarStyles.js","components/common/SortBar/SortBar.js","components/Blogs/Bloglist.js","utils/sortItems.js","components/Notification.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/common/formStyles.js","components/Blogs/NewBlogForm.js","services/users.js","components/UsersView/User.js","components/UsersView/UsersView.js","components/UserProfile/UserProfile.js","reducers/usersReducer.js","components/Blogs/Comments.js","components/Blogs/BlogView.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","components/Nav/NavStyles.js","components/Nav/NavBar.js","components/RegisterForm.js","App.js","store.js","theme.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","getComments","blogId","url","console","log","create","newObject","config","headers","Authorization","post","put","_id","comment","incomingComment","remove","delete","setToken","newToken","reusableStyle","border","marginBottom","borderRadius","blogListStyles","makeStyles","theme","listItemContainer","padding","listItem","textDecoration","color","listItemSubtitle","palette","grey","main","inputContainer","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","textField","width","marginLeft","marginRight","backgroundColor","secondary","input","sortBarStyles","sortBarContainer","display","alignItems","justifyContent","activeButton","SortBar","setState","useState","setActiveButton","classes","sortItems","operation","Box","className","IconButton","aria-label","onClick","fontSize","Blog","blog","to","id","Typography","variant","author","moment","createdAt","fromNow","title","Bloglist","blogs","useSelector","state","sortMethod","setSortMethod","history","useHistory","sortedBlogs","useMemo","itemsToSort","sort","b","likes","sortItemsByLikes","comments","length","sortItemsByComments","diff","sortItemsDefault","TextField","margin","required","type","label","name","autoComplete","onFocus","push","map","key","Notification","open","setOpen","notification","message","isErrorMessage","isError","useEffect","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","changeNotification","content","time","dispatch","Promise","resolve","setTimeout","notificationReducer","action","deleteBlog","blogObject","blogService","blogReducer","idToLike","blogToLike","find","likedBlog","filteredBlogs","filter","formStyles","paper","marginTop","spacing","flexDirection","avatar","form","button","NewBlogForm","user","newBlog","setNewBlog","useDispatch","Container","maxWidth","component","onSubmit","date","format","preventDefault","returnedBlog","newBlogObject","fullWidth","placeholder","value","autoFocus","onChange","target","multiline","rows","size","Button","register","credentials","User","UsersView","users","setUsers","userService","then","result","catch","err","UserProfile","usersBlogs","username","initializeUsers","usersService","usersReducer","commentStyles","connect","setComment","createComment","newComment","retrievedBlogArray","updatedBlog","pop","addComment","c","i","style","borderBottom","howLongAgo","window","confirm","login","loginUser","password","loginService","registerUser","userReducer","LoginForm","props","setUsername","setPassword","handleLogin","Avatar","noValidate","navStyles","root","flexGrow","navItem","height","getContrastText","logoutButton","NavBar","AppBar","Toolbar","localStorage","clear","RegisterForm","setName","handleRegistration","App","loggedUserJSON","getItem","JSON","parse","alreadyLoggedIn","setItem","stringify","matchUser","useRouteMatch","searchedUser","params","matchBlog","searchedBlog","marginDiv","useStyles","path","rootReducer","combineReducers","persistConfig","version","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","createMuiTheme","primary","error","success","persistor","persistStore","ReactDOM","render","loading","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.778a1a24.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getComments = async (blogId) => {\n  const url = `${baseUrl}/${blogId}`;\n  const response = await axios.get(url);\n  console.log(response);\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst put = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const url = `${baseUrl}/${newObject._id}`;\n  const response = await axios.put(url, newObject, config);\n  return response.data;\n};\n\nconst comment = async (incomingComment, blogId) => {\n  const url = `${baseUrl}/${blogId}/comments`;\n  const response = await axios.post(url, incomingComment);\n  return response.data;\n};\n\nconst remove = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  console.log(newObject);\n  const url = `${baseUrl}/${newObject._id}`;\n  const response = await axios.delete(url, config);\n  return response.data;\n};\n\nexport default { getAll, getComments, create, put, remove, setToken, comment };\n","import { makeStyles } from '@material-ui/styles';\n\nexport const reusableStyle = {\n  border: '1px solid #BDC3C7',\n  '&:hover': {\n    border: '1px solid black',\n  },\n  marginBottom: 16,\n  borderRadius: 3,\n};\n\nexport const blogListStyles = makeStyles((theme) => ({\n  listItemContainer: {\n    padding: 24,\n    border: reusableStyle.border,\n    marginBottom: reusableStyle.marginBottom,\n    '&:hover': reusableStyle['&:hover'],\n    borderRadius: reusableStyle.borderRadius,\n  },\n  listItem: {\n    textDecoration: 'none',\n    color: '#000',\n  },\n  listItemSubtitle: {\n    color: theme.palette.grey.main,\n  },\n  inputContainer: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    paddingTop: 8,\n    paddingBottom: 8,\n    border: reusableStyle.border,\n    marginBottom: reusableStyle.marginBottom,\n    borderRadius: reusableStyle.borderRadius,\n    textAlign: 'center',\n  },\n  textField: {\n    width: '75%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: theme.palette.grey.secondary,\n  },\n  input: {\n    border: 'none',\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\nimport { reusableStyle } from '../../Blogs/BlogListStyles';\n\nexport const sortBarStyles = makeStyles((theme) => ({\n  sortBarContainer: {\n    padding: 4,\n    border: reusableStyle.border,\n    marginBottom: reusableStyle.marginBottom,\n    borderRadius: reusableStyle.borderRadius,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& button': {\n      marginLeft: 16,\n      marginRight: 16,\n      '&:hover, &.Mui-focusVisible': {\n        backgroundColor: theme.palette.grey.secondary,\n      },\n    },\n  },\n  activeButton: {\n    color: theme.palette.secondary.main,\n    backgroundColor: theme.palette.grey.secondary,\n  },\n}));\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { IconButton } from '@material-ui/core';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport { sortBarStyles } from './SortBarStyles';\n\nexport const SortBar = ({ setState }) => {\n  const [activeButton, setActiveButton] = useState('recent');\n  const classes = sortBarStyles();\n\n  const sortItems = (operation) => {\n    if (operation === 'sortItemsByComments') {\n      setState('comments');\n      setActiveButton('comments');\n    } else if (operation === 'sortItemsByLikes') {\n      setState('likes');\n      setActiveButton('likes');\n    } else {\n      setState('recent');\n      setActiveButton('recent');\n    }\n  };\n\n  return (\n    <Box className={classes.sortBarContainer}>\n      <IconButton\n        aria-label=\"sort-recent\"\n        onClick={() => sortItems('default')}\n        className={activeButton === 'recent' ? classes.activeButton : ''}\n      >\n        <NewReleasesIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton\n        aria-label=\"sort-likes\"\n        onClick={() => sortItems('sortItemsByLikes')}\n        className={activeButton === 'likes' ? classes.activeButton : ''}\n      >\n        <FavoriteIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton\n        aria-label=\"sort-comments\"\n        onClick={() => sortItems('sortItemsByComments')}\n        className={activeButton === 'comments' ? classes.activeButton : ''}\n      >\n        <WhatshotIcon fontSize=\"large\" />\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default SortBar;\n","import React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { blogListStyles } from './BlogListStyles';\nimport {\n  sortItemsByComments,\n  sortItemsByLikes,\n  sortItemsDefault,\n} from '../../utils/sortItems';\nimport { SortBar } from '../common/SortBar/SortBar';\n\nexport const Blog = ({ blog }) => {\n  const classes = blogListStyles();\n\n  return (\n    <Link to={`/blogs/${blog.id}`} className={classes.listItem}>\n      <Box className={classes.listItemContainer}>\n        <Typography variant=\"body2\">\n          posted by {blog.author} {moment(blog.createdAt).fromNow()}\n        </Typography>\n\n        <Typography variant=\"h5\">{blog.title}</Typography>\n      </Box>\n    </Link>\n  );\n};\n\nconst Bloglist = () => {\n  const blogs = useSelector((state) => state.blogs);\n  const [sortMethod, setSortMethod] = useState('recent');\n  const classes = blogListStyles();\n  const history = useHistory();\n\n  const sortedBlogs = useMemo(() => {\n    if (sortMethod === 'likes') {\n      return sortItemsByLikes(blogs);\n    }\n    if (sortMethod === 'comments') {\n      return sortItemsByComments(blogs);\n    }\n    return sortItemsDefault(blogs);\n  }, [blogs, sortMethod]);\n\n  console.log(sortedBlogs);\n\n  return (\n    <div>\n      <Box className={classes.inputContainer}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          id=\"newPost\"\n          type=\"text\"\n          label=\"Create Post\"\n          name=\"New Post\"\n          autoComplete=\"on\"\n          className={classes.textField}\n          onFocus={() => history.push('/create')}\n        />\n      </Box>\n      <SortBar setState={setSortMethod} />\n      {sortedBlogs.map((blog) => (\n        <Blog key={blog.id} blog={blog} />\n      ))}\n    </div>\n  );\n};\n\nexport default Bloglist;\n","import moment from 'moment';\n\nexport const sortItemsDefault = (itemsToSort = []) =>\n  [...itemsToSort].sort((a, b) =>\n    moment(b.createdAt, 'YYYY-MM-DD HH:mm:ss').diff(\n      a.createdAt,\n      'YYYY-MM-DD HH:mm:ss'\n    )\n  );\n\nexport const sortItemsByLikes = (itemsToSort = []) =>\n  [...itemsToSort].sort((a, b) => b.likes - a.likes);\n\nexport const sortItemsByComments = (itemsToSort = []) =>\n  [...itemsToSort].sort((a, b) => b.comments.length - a.comments.length);\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../App.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Alert } from '@material-ui/lab';\n\nconst Notification = () => {\n  const [open, setOpen] = useState(false);\n  const notification = useSelector((state) => state.notification.message);\n  const isErrorMessage = useSelector((state) => state.notification.isError);\n\n  useEffect(() => {\n    if (notification !== '') {\n      setOpen(true);\n    }\n  }, [notification]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  if (notification === '') {\n    return null;\n  }\n  return (\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert\n        onClose={handleClose}\n        severity={isErrorMessage ? 'error' : 'success'}\n      >\n        {notification}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","const notificationReducer = (state = {message: '', isError: false}, action) => {\n  switch (action.type) {\n    case 'NEW_NOTIFICATION':\n      return action\n    default:\n      return state\n  }\n}\n\nexport const changeNotification = (content, time, isError = false) => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEW_NOTIFICATION',\n      message: content,\n      isError: isError\n    })\n    return new Promise(resolve => {\n      setTimeout(() => {\n        dispatch({\n          type: 'NEW_NOTIFICATION',\n          message: '',\n          isError: false,\n        })\n      }, time)\n    })\n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'NEW_NOTIFICATION',\n    content: '',\n  }\n}\n\nexport default notificationReducer","import blogService from '../services/blogs';\nimport { changeNotification } from './notificationReducer';\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data;\n    case 'ADD_BLOG': {\n      return [...state, action.data];\n    }\n    case 'LIKE': {\n      const idToLike = action.data.id;\n      const blogToLike = state.find((b) => b.id === idToLike);\n      const likedBlog = {\n        ...blogToLike,\n        likes: action.data.likes,\n      };\n      console.log(blogToLike === likedBlog);\n      return state.map((blog) => (blog.id !== idToLike ? blog : likedBlog));\n    }\n    case 'COMMENT': {\n      return state.map((blog) => {\n        if (blog.id === action.data.id) {\n          console.log(action.id);\n          return action.data;\n        }\n        return blog;\n      });\n    }\n    case 'GET_COMMENTS': {\n      console.log(action.data);\n      return state;\n    }\n    case 'DELETE_BLOG': {\n      const filteredBlogs = state.filter((blog) => blog.id !== action.data._id);\n      return filteredBlogs;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const initializeBlogs = () => async (dispatch) => {\n  const blogs = await blogService.getAll();\n  dispatch({\n    type: 'INIT_BLOGS',\n    data: blogs,\n  });\n};\n\nexport const createBlog = (returnedBlog) => async (dispatch) => {\n  const newBlog = await blogService.create(returnedBlog);\n  dispatch({\n    type: 'ADD_BLOG',\n    data: newBlog,\n  });\n};\n\nexport const likeBlog = (blogObject) => async (dispatch) => {\n  const updatedBlog = await blogService.put(blogObject);\n  console.log(updatedBlog);\n  await dispatch({\n    type: 'LIKE',\n    data: updatedBlog,\n  });\n  dispatch(changeNotification(`You liked ${blogObject.author}'s post`, 3000));\n};\n\nexport const addComment = (incomingComment, blogId) => async (dispatch) => {\n  const retrievedBlogArray = await blogService.comment(incomingComment, blogId);\n  const updatedBlog = retrievedBlogArray.pop();\n  console.log(updatedBlog);\n  await dispatch({\n    type: 'COMMENT',\n    data: updatedBlog,\n  });\n};\n\nexport const getComments = (blogId) => async (dispatch) => {\n  const retrievedBlog = await blogService.getComments(blogId);\n  console.log(retrievedBlog);\n  await dispatch({\n    type: 'GET_COMMENTS',\n    data: retrievedBlog,\n  });\n};\n\nexport const deleteBlog = (blogObject) => async (dispatch) => {\n  await blogService.remove(blogObject);\n  await dispatch({\n    type: 'DELETE_BLOG',\n    data: blogObject,\n  });\n  dispatch(\n    changeNotification(`You deleted the post title: ${blogObject.title}`, 3000)\n  );\n};\n\nexport default blogReducer;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst formStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default formStyles;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { createBlog } from '../../reducers/blogReducer';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport formStyles from '../common/formStyles';\n\nconst NewBlogForm = ({ user }) => {\n  const [newBlog, setNewBlog] = useState({ title: '', post: '' });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = formStyles();\n\n  const handleSubmit = (event) => {\n    const date = moment().format('YYYY-MM-DD HH:mm:ss');\n    event.preventDefault();\n    const newBlogObject = {\n      title: newBlog.title,\n      post: newBlog.post,\n      author: user,\n      createdAt: date,\n    };\n    dispatch(createBlog(newBlogObject));\n    dispatch(\n      changeNotification(\n        `Your new blog titled: \"${newBlogObject.title}\" has been added to the server!`,\n        3000\n      )\n    );\n    setNewBlog({ title: '', post: '' });\n    history.push(`/blogs`);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Post\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"title\"\n            placeholder=\"Title\"\n            type=\"text\"\n            value={newBlog.title}\n            name=\"Title\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) =>\n              setNewBlog((newBlog) => ({ ...newBlog, title: target.value }))\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"post\"\n            placeholder=\"Say something wonderful!\"\n            type=\"text\"\n            value={newBlog.post}\n            name=\"Post\"\n            multiline\n            rows={10}\n            size=\"medium\"\n            onChange={({ target }) =>\n              setNewBlog((newBlog) => ({ ...newBlog, post: target.value }))\n            }\n            autoComplete=\"on\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            id=\"login-button\"\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default NewBlogForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst register = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n\n  return response.data;\n};\n\nexport default { getAll, register };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst User = ({ user }) => (\n  <div>\n    <p>\n      <Link to={`users/${user.id}`}>{user.name}</Link>:{' '}\n      <strong>blogs created:</strong> {user.blogs.length}\n    </p>\n  </div>\n);\n\nexport default User;\n","import React, { useEffect, useState } from 'react';\nimport userService from '../../services/users';\nimport User from './User';\n\nconst UsersView = () => {\n  const [users, setUsers] = useState([]);\n\n  const getUsers = () =>\n    userService\n      .getAll()\n      .then((result) => {\n        setUsers(result);\n      })\n      .catch((err) => {\n        console.log('something went wrong!');\n        console.log(err);\n      });\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <hr />\n      <div>\n        {users.map((user) => (\n          <User key={user.id} user={user} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UsersView;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Blog } from '../Blogs/Bloglist';\n\nconst UserProfile = ({ user }) => {\n  const blogs = useSelector((state) => state.blogs);\n  const usersBlogs = blogs.filter((b) => b.author === user.name);\n\n  return (\n    <div>\n      <h2>{user.username}</h2>\n      <br />\n      <hr />\n      <div>\n        <h4>Information:</h4>\n        <br />\n        <p>\n          <strong>Name:</strong> {user.name}\n        </p>\n        <br />\n        <h4>Blog Posts:</h4>\n        <br />\n        <ul>\n          {usersBlogs.map((blog) => (\n            <li key={blog.id}>\n              <Blog blog={blog} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import usersService from '../services/users';\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const initializeUsers = () => async (dispatch) => {\n  const users = await usersService.getAll();\n  dispatch({\n    type: 'INIT_USERS',\n    data: users,\n  });\n};\n\nexport default usersReducer;\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport moment from 'moment';\nimport { addComment } from '../../reducers/blogReducer';\nimport { changeNotification } from '../../reducers/notificationReducer';\n\nconst commentStyles = makeStyles((theme) => ({\n  comment: {\n    marginLeft: 16,\n  },\n  author: {\n    fontSize: 14,\n    '& span': {\n      color: theme.palette.grey.main,\n    },\n  },\n}));\n\nconst Comments = ({ blog, user }) => {\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const classes = commentStyles();\n\n  const createComment = (event, blogId) => {\n    event.preventDefault();\n    const date = moment().format('YYYY-MM-DD HH:mm:ss');\n    const newComment = { content: comment, user: user.id, createdAt: date };\n    dispatch(addComment(newComment, blogId));\n    dispatch(changeNotification(`Your comment has been added`, 3000));\n  };\n\n  return (\n    <div>\n      <h3>Comments:</h3>\n      <form\n        onSubmit={(event) => {\n          createComment(event, blog.id);\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"comment\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n        />\n        <button type=\"submit\">add comment</button>\n      </form>\n      <hr />\n      {blog.comments.map((c, i) => (\n        <div\n          style={{ borderBottom: '1px solid black', marginBottom: '1em' }}\n          key={i}\n          className={classes.comment}\n        >\n          <p className={classes.author}>\n            {c.author} <span>{moment(c.createdAt).fromNow()}</span>\n          </p>\n          <p>{c.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Comments);\n","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { deleteBlog, likeBlog } from '../../reducers/blogReducer';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport Comments from './Comments';\n\nconst BlogView = ({ blog, user }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const howLongAgo = moment(blog.createdAt, 'YYYY-MM-DD HH:mm:ss').fromNow();\n\n  const like = () => {\n    const likedBlog = {\n      user: blog.user.id,\n      likes: blog.likes,\n      author: blog.author,\n      title: blog.title,\n      post: blog.post,\n      _id: blog.id,\n    };\n    dispatch(likeBlog(likedBlog));\n  };\n\n  const remove = async () => {\n    if (blog.user.id !== user.id) {\n      dispatch(\n        changeNotification(\n          `You are not authorized to delete this post`,\n          3000,\n          true\n        )\n      );\n      return;\n    }\n\n    if (window.confirm(`Do you really want to delete \"${blog.title}\"?`)) {\n      const blogObject = {\n        user: blog.user.id,\n        author: blog.author,\n        title: blog.title,\n        post: blog.post,\n        _id: blog.id,\n      };\n      dispatch(deleteBlog(blogObject));\n      history.push('/');\n    }\n  };\n\n  return (\n    <div>\n      <span>\n        <h1>{blog.title}</h1>\n        <p>\n          posted by <Link to={`/users/${blog.user.id}`}>{blog.author}</Link> at{' '}\n          {howLongAgo}\n        </p>\n      </span>\n      <p>{blog.post}</p>\n      <br />\n      <p>\n        Likes: {blog.likes}\n        <button onClick={like} type=\"button\">\n          like\n        </button>\n      </p>\n      <p />\n      <button onClick={remove} type=\"button\">\n        delete\n      </button>\n      <Comments blog={blog} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(BlogView);\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import loginService from '../services/login';\nimport usersService from '../services/users';\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n    case 'LOGOUT':\n      return action.data;\n    case 'REGISTER':\n      return action.data;\n    case 'ALREADY_LOGGED_IN':\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const loginUser = (username, password) => async (dispatch) => {\n  const user = await loginService.login({\n    username,\n    password,\n  });\n  dispatch({\n    type: 'LOGIN',\n    data: user,\n  });\n};\n\nexport const logoutUser = () => async (dispatch) => {\n  dispatch({\n    type: 'LOGOUT',\n    data: null,\n  });\n};\n\nexport const registerUser = (name, username, password) => async (dispatch) => {\n  const user = await usersService.register({\n    name,\n    username,\n    password,\n  });\n  console.log(user);\n  dispatch({\n    type: 'REGISTER',\n    data: user,\n  });\n};\n\nexport const alreadyLoggedIn = (user) => async (dispatch) => {\n  dispatch({\n    type: 'ALREADY_LOGGED_IN',\n    data: user,\n  });\n};\n\nexport default userReducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { loginUser } from '../reducers/userReducer';\nimport { changeNotification } from '../reducers/notificationReducer';\nimport formStyles from './common/formStyles';\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    let mounted = true;\n    if (mounted === true) {\n      try {\n        dispatch(changeNotification('You have successfully logged in!', 3000));\n        setUsername('');\n        setPassword('');\n        await dispatch(loginUser(username, password));\n        history.push('/');\n      } catch (exception) {\n        dispatch(changeNotification('Incorrect credentials', 3000, true));\n        setUsername('');\n        setPassword('');\n      }\n    }\n    return () => (mounted = false);\n  };\n\n  const classes = formStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleLogin} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            label=\"Username\"\n            name=\"Username\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            label=\"Password\"\n            name=\"Password\"\n            autoComplete=\"on\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            id=\"login-button\"\n          >\n            Sign In\n          </Button>\n          Don't have an account?\n          <Link to=\"/register\" style={{ marginLeft: '1rem' }}>\n            Register now\n          </Link>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const navStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navItem: {\n    marginRight: theme.spacing(2),\n    textDecoration: 'none',\n    color: theme.palette.secondary.main,\n  },\n  avatar: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  backgroundColor: 'transparent',\n  logoutButton: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n}));\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport { logoutUser } from '../../reducers/userReducer';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport { navStyles } from './NavStyles';\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const classes = navStyles();\n  const user = useSelector((state) => state.user);\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    window.localStorage.clear();\n    dispatch(changeNotification('Successfully logged out!', 3000));\n  };\n\n  return (\n    <AppBar>\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title}>\n          <Link color=\"secondary\" to=\"/\" className={classes.navItem}>\n            Posts\n          </Link>\n          <Link color=\"secondary\" to=\"/users\" className={classes.navItem}>\n            Users\n          </Link>\n        </Typography>\n        <Avatar className={classes.avatar}>\n          <Typography variant=\"h5\">{user.name[0]}</Typography>\n        </Avatar>\n        <Button\n          className={classes.logoutButton}\n          color=\"inherit\"\n          onClick={handleLogout}\n        >\n          Logout\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { loginUser, registerUser } from '../reducers/userReducer';\nimport { changeNotification } from '../reducers/notificationReducer';\nimport { initializeUsers } from '../reducers/usersReducer';\nimport formStyles from './common/formStyles';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const handleRegistration = async (event) => {\n    event.preventDefault();\n    let mounted = true;\n    if (mounted === true) {\n      try {\n        history.push('/');\n\n        await dispatch(registerUser(name, username, password));\n        await dispatch(initializeUsers());\n        await dispatch(loginUser(username, password));\n\n        dispatch(changeNotification('You have successfully logged in!', 3000));\n        setUsername('');\n        setPassword('');\n      } catch (exception) {\n        dispatch(changeNotification('Incorrect credentials', 3000, true));\n        setUsername('');\n        setPassword('');\n      }\n    }\n    return () => (mounted = false);\n  };\n\n  const classes = formStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register New Account\n        </Typography>\n        <form className={classes.form} onSubmit={handleRegistration} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            type=\"text\"\n            value={name}\n            label=\"Name\"\n            name=\"Name\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setName(target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            label=\"Username\"\n            name=\"Username\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            label=\"Password\"\n            name=\"Password\"\n            autoComplete=\"on\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            id=\"login-button\"\n          >\n            Sign In\n          </Button>\n          <Link to=\"/\">Back to login</Link>\n        </form>\n      </div>\n    </Container>\n  );\n};\nexport default RegisterForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport blogService from './services/blogs';\nimport Bloglist from './components/Blogs/Bloglist';\nimport Notification from './components/Notification';\nimport NewBlogForm from './components/Blogs/NewBlogForm';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport UsersView from './components/UsersView/UsersView';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport { initializeUsers } from './reducers/usersReducer';\nimport BlogView from './components/Blogs/BlogView';\nimport LoginForm from './components/LoginForm';\nimport NavBar from './components/Nav/NavBar';\nimport RegisterForm from './components/RegisterForm';\nimport { alreadyLoggedIn } from './reducers/userReducer';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const blogs = useSelector((state) => state.blogs);\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(initializeUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // takes user's username ato find current user and log them in\n      dispatch(alreadyLoggedIn(user));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      window.localStorage.setItem('loggedInAppUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n    }\n  }, [user]);\n\n  const matchUser = useRouteMatch('/users/:id');\n  const searchedUser = matchUser\n    ? users.find((user) => user.id === matchUser.params.id)\n    : null;\n  const matchBlog = useRouteMatch('/blogs/:id');\n  const searchedBlog = matchBlog\n    ? blogs.find((b) => b.id === matchBlog.params.id)\n    : null;\n\n  const useStyles = makeStyles((theme) => ({\n    marginDiv: {\n      marginTop: theme.spacing(12),\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Notification user=\"\" />\n      {user === null ? (\n        <div>\n          <Switch>\n            <Route path=\"/register\">\n              <RegisterForm />\n            </Route>\n            <Route path=\"/\">\n              <LoginForm />\n            </Route>\n          </Switch>\n        </div>\n      ) : (\n        <Container maxWidth=\"md\">\n          <NavBar />\n          <div className={classes.marginDiv}>\n            <Switch>\n              <Route path=\"/blogs/:id\">\n                <BlogView blog={searchedBlog} />\n              </Route>\n              <Route path=\"/users/:id\">\n                <UserProfile user={searchedUser} />\n              </Route>\n              <Route path=\"/users\">\n                <UsersView />\n              </Route>\n              <Route path=\"/create\">\n                <NewBlogForm user={user} />\n              </Route>\n              <Route path=\"/register\">\n                <RegisterForm />\n              </Route>\n              <Route path=\"/\">\n                <Bloglist />\n              </Route>\n            </Switch>\n          </div>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport blogReducer from './reducers/blogReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport userReducer from './reducers/userReducer';\nimport usersReducer from './reducers/usersReducer';\n\nconst rootReducer = combineReducers({\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: userReducer,\n  users: usersReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#CBF3F0',\n    },\n    secondary: {\n      main: '#FFBF69',\n    },\n    error: {\n      main: '#FF9F1C',\n    },\n    success: {\n      main: '#2EC4B6',\n    },\n    grey: {\n      main: '#BDC3C7',\n      secondary: '#f6f7f8',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <App/>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </Router>,\n  document.getElementById('root'))"],"sourceRoot":""}