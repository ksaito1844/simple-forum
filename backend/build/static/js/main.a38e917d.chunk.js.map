{"version":3,"sources":["theme.js","services/blogs.js","reducers/postsSlice.js","reducers/commentsSlice.js","reducers/notificationReducer.js","services/login.js","services/users.js","reducers/userReducer.js","reducers/usersReducer.js","store.js","components/Blogs/BlogListStyles.js","components/common/SortBar/SortBarStyles.js","components/common/SortBar/SortBar.js","components/common/TimeAgo.js","components/Blogs/SingleBlog.js","components/Blogs/Bloglist.js","components/Notification.js","components/common/formStyles.js","components/Blogs/NewBlogForm.js","components/UsersView/User.js","components/UsersView/UsersView.js","components/UserProfile/UserProfile.js","components/Blogs/SingleComment.js","components/Blogs/Comments.js","components/Blogs/BlogView.js","components/LoginForm.js","components/Nav/NavStyles.js","components/Nav/NavBar.js","components/RegisterForm.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","success","grey","baseUrl","token","getAll","a","axios","get","response","data","getComments","blogId","url","create","newObject","config","headers","Authorization","post","put","_id","comment","incomingComment","remove","id","delete","setToken","newToken","postsAdapter","createEntityAdapter","sortComparer","b","date","localeCompare","initialState","getInitialState","status","sortBy","fetchPosts","createAsyncThunk","blogService","addNewPost","newPost","likePost","postLikes","changes","likes","removePost","postId","postsSlice","createSlice","name","reducers","addCommentToPost","reducer","state","action","payload","commentId","entities","comments","push","extraReducers","pending","fulfilled","upsertMany","rejected","message","addOne","updateOne","removeOne","actions","sortPostsByLikes","getSelectors","posts","selectAllPosts","selectAll","selectPostById","selectById","sortPosts","selectIds","createSelector","_","sortMethod","sort","map","length","commentsAdapter","fetchComments","addComment","commentData","thunkAPI","newComment","dispatch","commentsSlice","selectCommentById","selectCommentIds","selectCommentsByPost","commentsIds","filter","includes","changeNotification","content","time","isError","type","Promise","resolve","setTimeout","notificationReducer","login","credentials","register","loginUser","username","password","loginService","user","registerUser","usersService","console","log","userReducer","initializeUsers","users","usersReducer","rootReducer","combineReducers","postsReducer","commentsReducer","notification","persistConfig","key","version","storage","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","reusableStyle","border","marginBottom","borderRadius","blogListStyles","makeStyles","listItemContainer","padding","listItem","textDecoration","color","listItemSubtitle","inputContainer","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","textField","width","marginLeft","marginRight","backgroundColor","input","sortBarStyles","sortBarContainer","display","alignItems","justifyContent","activeButton","SortBar","setState","useState","setActiveButton","classes","sortItems","operation","Box","className","IconButton","aria-label","onClick","fontSize","TimeAgo","timestamp","timeAgo","parseISO","timePeriod","formatDistanceToNow","title","SingleBlog","blog","useSelector","to","Typography","variant","author","Bloglist","setSortMethod","history","useHistory","sortedPosts","TextField","margin","required","label","autoComplete","onFocus","Notification","open","setOpen","isErrorMessage","useEffect","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","formStyles","paper","marginTop","spacing","flexDirection","avatar","form","button","NewBlogForm","newBlog","setNewBlog","useDispatch","Container","maxWidth","component","onSubmit","preventDefault","newBlogObject","fullWidth","placeholder","value","autoFocus","onChange","target","multiline","rows","size","Button","User","blogs","UsersView","setUsers","userService","then","result","catch","err","UserProfile","usersBlogs","commentStyles","SingleComment","style","borderBottom","connect","blogComments","setComment","createComment","c","match","params","window","confirm","blogObject","likedBlog","LoginForm","props","setUsername","setPassword","handleLogin","Avatar","noValidate","navStyles","root","flexGrow","navItem","height","getContrastText","logoutButton","NavBar","AppBar","Toolbar","localStorage","clear","RegisterForm","setName","handleRegistration","App","Object","values","loggedUserJSON","getItem","JSON","parse","alreadyLoggedIn","setItem","stringify","matchUser","useRouteMatch","searchedUser","find","matchBlog","marginDiv","useStyles","path","exact","BlogView","persistor","persistStore","ReactDOM","render","loading","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a38e917d.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#CBF3F0',\n    },\n    secondary: {\n      main: '#FFBF69',\n    },\n    error: {\n      main: '#FF9F1C',\n    },\n    success: {\n      main: '#2EC4B6',\n    },\n    grey: {\n      main: '#BDC3C7',\n      secondary: '#f6f7f8',\n    },\n  },\n});\n\nexport default theme;\n","import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getComments = async (blogId) => {\n  const url = `${baseUrl}/${blogId}/comments`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst put = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const url = `${baseUrl}/${newObject._id}`;\n  const response = await axios.put(url, newObject, config);\n  return response.data;\n};\n\nconst comment = async (incomingComment, blogId) => {\n  const url = `${baseUrl}/${blogId}/comments`;\n  const response = await axios.post(url, incomingComment);\n  return response.data;\n};\n\nconst remove = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const url = `${baseUrl}/${newObject.id}`;\n  const response = await axios.delete(url, config);\n  return response.data;\n};\n\nexport default { getAll, getComments, create, put, remove, setToken, comment };\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  createSelector,\n} from '@reduxjs/toolkit';\nimport blogService from '../services/blogs';\n\nconst postsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => b.date.localeCompare(a.date),\n});\n\nexport const initialState = postsAdapter.getInitialState({\n  status: 'idle',\n  error: null,\n  sortBy: 'date',\n});\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = blogService.getAll();\n  return response;\n});\n\nexport const addNewPost = createAsyncThunk(\n  'posts/addNewPost',\n  async (newPost) => {\n    const response = blogService.create(newPost);\n    return response;\n  }\n);\n\nexport const likePost = createAsyncThunk(\n  'posts/likePost',\n  async (postLikes) => {\n    const response = await blogService.put(postLikes);\n    return {\n      id: response.id,\n      changes: {\n        likes: response.likes,\n      },\n    };\n  }\n);\n\nexport const removePost = createAsyncThunk(\n  'posts/removePost',\n  async (postId) => {\n    await blogService.remove(postId);\n    return postId.id;\n  }\n);\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    addCommentToPost: {\n      reducer(state, action) {\n        const { postId, commentId } = action.payload;\n        const post = state.entities[postId];\n        if (post) {\n          post.comments.push({ id: commentId });\n        }\n      },\n    },\n  },\n  extraReducers: {\n    [fetchPosts.pending]: (state) => {\n      state.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      postsAdapter.upsertMany(state, action.payload);\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    },\n    [addNewPost.fulfilled]: postsAdapter.addOne,\n    [likePost.fulfilled]: postsAdapter.updateOne,\n    [removePost.fulfilled]: postsAdapter.removeOne,\n  },\n});\n\nexport default postsSlice.reducer;\n\nexport const { addCommentToPost, sortPostsByLikes } = postsSlice.actions;\n\nexport const {\n  selectAll: selectAllPosts,\n  selectById: selectPostById,\n  selectIds: selectPostIds,\n} = postsAdapter.getSelectors((state) => state.posts);\n\nexport const sortPosts = createSelector(\n  selectAllPosts,\n  (_, sortMethod) => sortMethod,\n  (posts, sortMethod) => {\n    if (sortMethod === 'likes') {\n      return posts.sort((a, b) => b.likes - a.likes).map((post) => post.id);\n    }\n    if (sortMethod === 'comments') {\n      return posts\n        .sort((a, b) => b.comments.length - a.comments.length)\n        .map((post) => post.id);\n    }\n    if (sortMethod === 'recent') {\n      return posts\n        .sort((a, b) => b.date.localeCompare(a.date))\n        .map((post) => post.id);\n    }\n  }\n);\n\n// export const selectPostsByLikes = createSelector([selectAllPosts], (posts) =>\n//   posts.sort((a, b) => b.likes - a.likes).map((post) => post.id)\n// );\n//\n// export const selectPostsByComments = createSelector([selectAllPosts], (posts) =>\n//   posts\n//     .sort((a, b) => b.comments.length - a.comments.length)\n//     .map((post) => post.id)\n// );\n//\n// export const selectPostsByDate = createSelector([selectAllPosts], (posts) =>\n//   posts.sort((a, b) => b.date.localeCompare(a.date)).map((post) => post.id)\n// );\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n} from '@reduxjs/toolkit';\nimport blogService from '../services/blogs';\nimport { addCommentToPost } from './postsSlice';\n\nexport const commentsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => b.date.localeCompare(a.date),\n});\n\nconst initialState = commentsAdapter.getInitialState({\n  status: 'idle',\n  error: null,\n});\n\nexport const fetchComments = createAsyncThunk(\n  'comments/fetchComments',\n  async (postId) => blogService.getComments(postId)\n);\n\nexport const addComment = createAsyncThunk(\n  'posts/addComment',\n  async (commentData, thunkAPI) => {\n    const response = await blogService.comment(\n      commentData.newComment,\n      commentData.postId\n    );\n    await thunkAPI.dispatch(\n      addCommentToPost({ postId: commentData.postId, commentId: response.id })\n    );\n    return response;\n  }\n);\n\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchComments.pending]: (state) => {\n      state.status = 'loading';\n    },\n    [fetchComments.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      commentsAdapter.upsertMany(state, action.payload);\n    },\n    [fetchComments.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    },\n    [addComment.fulfilled]: commentsAdapter.addOne,\n  },\n});\n\nexport default commentsSlice.reducer;\n\nexport const {\n  selectAll: selectAllComments,\n  selectById: selectCommentById,\n  selectIds: selectCommentIds,\n} = commentsAdapter.getSelectors((state) => state.comments);\n\nexport const selectCommentsByPost = createSelector(\n  [\n    selectCommentIds,\n    (state, commentsIds) => commentsIds.map((comment) => comment.id),\n  ],\n  (comments, commentsIds) =>\n    comments.filter((comment) => commentsIds.includes(comment))\n);\n","const notificationReducer = (state = {message: '', isError: false}, action) => {\n  switch (action.type) {\n    case 'NEW_NOTIFICATION':\n      return action\n    default:\n      return state\n  }\n}\n\nexport const changeNotification = (content, time, isError = false) => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEW_NOTIFICATION',\n      message: content,\n      isError: isError\n    })\n    return new Promise(resolve => {\n      setTimeout(() => {\n        dispatch({\n          type: 'NEW_NOTIFICATION',\n          message: '',\n          isError: false,\n        })\n      }, time)\n    })\n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'NEW_NOTIFICATION',\n    content: '',\n  }\n}\n\nexport default notificationReducer","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst register = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n\n  return response.data;\n};\n\nexport default { getAll, register };\n","import loginService from '../services/login';\nimport usersService from '../services/users';\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n    case 'LOGOUT':\n      return action.data;\n    case 'REGISTER':\n      return action.data;\n    case 'ALREADY_LOGGED_IN':\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const loginUser = (username, password) => async (dispatch) => {\n  const user = await loginService.login({\n    username,\n    password,\n  });\n  dispatch({\n    type: 'LOGIN',\n    data: user,\n  });\n};\n\nexport const logoutUser = () => async (dispatch) => {\n  dispatch({\n    type: 'LOGOUT',\n    data: null,\n  });\n};\n\nexport const registerUser = (name, username, password) => async (dispatch) => {\n  const user = await usersService.register({\n    name,\n    username,\n    password,\n  });\n  console.log(user);\n  dispatch({\n    type: 'REGISTER',\n    data: user,\n  });\n};\n\nexport const alreadyLoggedIn = (user) => async (dispatch) => {\n  dispatch({\n    type: 'ALREADY_LOGGED_IN',\n    data: user,\n  });\n};\n\nexport default userReducer;\n","import usersService from '../services/users';\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const initializeUsers = () => async (dispatch) => {\n  const users = await usersService.getAll();\n  dispatch({\n    type: 'INIT_USERS',\n    data: users,\n  });\n};\n\nexport default usersReducer;\n","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport postsReducer from './reducers/postsSlice';\nimport commentsReducer from './reducers/commentsSlice';\nimport notificationReducer from './reducers/notificationReducer';\nimport userReducer from './reducers/userReducer';\nimport usersReducer from './reducers/usersReducer';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  comments: commentsReducer,\n  notification: notificationReducer,\n  user: userReducer,\n  users: usersReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport default store;\n","import { makeStyles } from '@material-ui/styles';\n\nexport const reusableStyle = {\n  border: '1px solid #BDC3C7',\n  '&:hover': {\n    border: '1px solid black',\n  },\n  marginBottom: 16,\n  borderRadius: 3,\n};\n\nexport const blogListStyles = makeStyles((theme) => ({\n  listItemContainer: {\n    padding: 24,\n    border: reusableStyle.border,\n    marginBottom: reusableStyle.marginBottom,\n    '&:hover': reusableStyle['&:hover'],\n    borderRadius: reusableStyle.borderRadius,\n  },\n  listItem: {\n    textDecoration: 'none',\n    color: '#000',\n  },\n  listItemSubtitle: {\n    color: theme.palette.grey.main,\n  },\n  inputContainer: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    paddingTop: 8,\n    paddingBottom: 8,\n    border: reusableStyle.border,\n    marginBottom: reusableStyle.marginBottom,\n    borderRadius: reusableStyle.borderRadius,\n    textAlign: 'center',\n  },\n  textField: {\n    width: '75%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: theme.palette.grey.secondary,\n  },\n  input: {\n    border: 'none',\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\nimport { reusableStyle } from '../../Blogs/BlogListStyles';\n\nexport const sortBarStyles = makeStyles((theme) => ({\n  sortBarContainer: {\n    padding: 4,\n    border: reusableStyle.border,\n    marginBottom: reusableStyle.marginBottom,\n    borderRadius: reusableStyle.borderRadius,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& button': {\n      marginLeft: 16,\n      marginRight: 16,\n      '&:hover, &.Mui-focusVisible': {\n        backgroundColor: theme.palette.grey.secondary,\n      },\n    },\n  },\n  activeButton: {\n    color: theme.palette.secondary.main,\n    backgroundColor: theme.palette.grey.secondary,\n  },\n}));\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { IconButton } from '@material-ui/core';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport { sortBarStyles } from './SortBarStyles';\n\nexport const SortBar = ({ setState }) => {\n  const [activeButton, setActiveButton] = useState('recent');\n  const classes = sortBarStyles();\n\n  const sortItems = (operation) => {\n    if (operation === 'sortItemsByComments') {\n      setState('comments');\n      setActiveButton('comments');\n    } else if (operation === 'sortItemsByLikes') {\n      setState('likes');\n      setActiveButton('likes');\n    } else {\n      setState('recent');\n      setActiveButton('recent');\n    }\n  };\n\n  return (\n    <Box className={classes.sortBarContainer}>\n      <IconButton\n        aria-label=\"sort-recent\"\n        onClick={() => sortItems('default')}\n        className={activeButton === 'recent' ? classes.activeButton : ''}\n      >\n        <NewReleasesIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton\n        aria-label=\"sort-likes\"\n        onClick={() => sortItems('sortItemsByLikes')}\n        className={activeButton === 'likes' ? classes.activeButton : ''}\n      >\n        <FavoriteIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton\n        aria-label=\"sort-comments\"\n        onClick={() => sortItems('sortItemsByComments')}\n        className={activeButton === 'comments' ? classes.activeButton : ''}\n      >\n        <WhatshotIcon fontSize=\"large\" />\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default SortBar;\n","import React from 'react';\nimport { parseISO, formatDistanceToNow } from 'date-fns';\n\nexport const TimeAgo = ({ timestamp }) => {\n  let timeAgo = '';\n  if (timestamp) {\n    const date = parseISO(timestamp);\n    const timePeriod = formatDistanceToNow(date);\n    timeAgo = `${timePeriod} ago`;\n  }\n\n  return (\n    <span title={timestamp}>\n      &nbsp; <i>{timeAgo}</i>\n    </span>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { selectPostById } from '../../reducers/postsSlice';\nimport { blogListStyles } from './BlogListStyles';\nimport { TimeAgo } from '../common/TimeAgo';\n\nconst SingleBlog = ({ blogId }) => {\n  const classes = blogListStyles();\n  const blog = useSelector((state) => selectPostById(state, blogId));\n\n  return (\n    <Link to={`/blogs/${blog.id}`} className={classes.listItem}>\n      <Box className={classes.listItemContainer}>\n        <Typography variant=\"body2\">\n          posted by {blog.author} <TimeAgo timestamp={blog.date} />\n        </Typography>\n\n        <Typography variant=\"h5\">{blog.title}</Typography>\n      </Box>\n    </Link>\n  );\n};\n\nexport default SingleBlog;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { blogListStyles } from './BlogListStyles';\nimport { SortBar } from '../common/SortBar/SortBar';\nimport { selectPostIds, sortPosts } from '../../reducers/postsSlice';\nimport SingleBlog from './SingleBlog';\n\nconst Bloglist = () => {\n  const [sortMethod, setSortMethod] = useState('recent');\n  const classes = blogListStyles();\n  const history = useHistory();\n\n  const sortedPosts = useSelector((state) => sortPosts(state, sortMethod));\n\n  return (\n    <div>\n      <Box className={classes.inputContainer}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          id=\"newPost\"\n          type=\"text\"\n          label=\"Create Post\"\n          name=\"New Post\"\n          autoComplete=\"on\"\n          className={classes.textField}\n          onFocus={() => history.push('/create')}\n        />\n      </Box>\n      <SortBar setState={setSortMethod} />\n      {sortedPosts.map((blogId) => (\n        <SingleBlog key={blogId} blogId={blogId} />\n      ))}\n    </div>\n  );\n};\n\nexport default Bloglist;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../App.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Alert } from '@material-ui/lab';\n\nconst Notification = () => {\n  const [open, setOpen] = useState(false);\n  const notification = useSelector((state) => state.notification.message);\n  const isErrorMessage = useSelector((state) => state.notification.isError);\n\n  useEffect(() => {\n    if (notification !== '') {\n      setOpen(true);\n    }\n  }, [notification]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  if (notification === '') {\n    return null;\n  }\n  return (\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert\n        onClose={handleClose}\n        severity={isErrorMessage ? 'error' : 'success'}\n      >\n        {notification}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst formStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default formStyles;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { addNewPost } from '../../reducers/postsSlice';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport formStyles from '../common/formStyles';\n\nconst NewBlogForm = ({ user }) => {\n  const [newBlog, setNewBlog] = useState({ title: '', post: '' });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = formStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newBlogObject = {\n      title: newBlog.title,\n      post: newBlog.post,\n      author: user,\n    };\n    dispatch(addNewPost(newBlogObject));\n    dispatch(\n      changeNotification(\n        `Your new blog titled: \"${newBlogObject.title}\" has been added to the server!`,\n        3000\n      )\n    );\n    setNewBlog({ title: '', post: '' });\n    history.push(`/`);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Post\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"title\"\n            placeholder=\"Title\"\n            type=\"text\"\n            value={newBlog.title}\n            name=\"Title\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) =>\n              setNewBlog((newBlog) => ({ ...newBlog, title: target.value }))\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"post\"\n            placeholder=\"Say something wonderful!\"\n            type=\"text\"\n            value={newBlog.post}\n            name=\"Post\"\n            multiline\n            rows={10}\n            size=\"medium\"\n            onChange={({ target }) =>\n              setNewBlog((newBlog) => ({ ...newBlog, post: target.value }))\n            }\n            autoComplete=\"on\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            id=\"login-button\"\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default NewBlogForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst User = ({ user }) => (\n  <div>\n    <p>\n      <Link to={`users/${user.id}`}>{user.name}</Link>:{' '}\n      <strong>blogs created:</strong> {user.blogs.length}\n    </p>\n  </div>\n);\n\nexport default User;\n","import React, { useEffect, useState } from 'react';\nimport userService from '../../services/users';\nimport User from './User';\n\nconst UsersView = () => {\n  const [users, setUsers] = useState([]);\n\n  const getUsers = () =>\n    userService\n      .getAll()\n      .then((result) => {\n        setUsers(result);\n      })\n      .catch((err) => {\n        console.log('something went wrong!');\n        console.log(err);\n      });\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <hr />\n      <div>\n        {users.map((user) => (\n          <User key={user.id} user={user} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UsersView;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport SingleBlog from '../Blogs/SingleBlog';\n\nconst UserProfile = ({ user }) => {\n  const blogs = useSelector((state) => state.blogs);\n  const usersBlogs = blogs.filter((b) => b.author === user.name);\n\n  return (\n    <div>\n      <h2>{user.username}</h2>\n      <br />\n      <hr />\n      <div>\n        <h4>Information:</h4>\n        <br />\n        <p>\n          <strong>Name:</strong> {user.name}\n        </p>\n        <br />\n        <h4>Blog Posts:</h4>\n        <br />\n        <ul>\n          {usersBlogs.map((blog) => (\n            <li key={blog.id}>\n              <SingleBlog blog={blog} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { useSelector } from 'react-redux';\nimport { selectCommentById } from '../../reducers/commentsSlice';\nimport { TimeAgo } from '../common/TimeAgo';\n\nconst commentStyles = makeStyles((theme) => ({\n  comment: {\n    marginLeft: 16,\n  },\n  author: {\n    fontSize: 14,\n    '& span': {\n      color: theme.palette.grey.main,\n    },\n  },\n}));\n\nconst SingleComment = ({ commentId }) => {\n  const comment = useSelector((state) => selectCommentById(state, commentId));\n  const classes = commentStyles();\n  return (\n    <div\n      style={{ borderBottom: '1px solid black', marginBottom: '1em' }}\n      className={classes.comment}\n    >\n      <p className={classes.author}>\n        {comment.author} <TimeAgo timestamp={comment.date} />\n      </p>\n      <p>{comment.content}</p>\n    </div>\n  );\n};\n\nexport default SingleComment;\n","import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport {\n  addComment,\n  fetchComments,\n  selectCommentsByPost,\n} from '../../reducers/commentsSlice';\nimport SingleComment from './SingleComment';\n\nconst Comments = ({ blogId, blogComments, user }) => {\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchComments(blogId));\n  }, [blogId, dispatch]);\n\n  const comments = useSelector((state) =>\n    selectCommentsByPost(state, blogComments)\n  );\n\n  const createComment = (event, postId) => {\n    event.preventDefault();\n    const newComment = { content: comment, user: user.id };\n    dispatch(addComment({ postId, newComment }));\n    dispatch(changeNotification(`Your comment has been added`, 3000));\n    setComment('');\n  };\n\n  return (\n    <div>\n      <h3>Comments:</h3>\n      <form\n        onSubmit={(event) => {\n          createComment(event, blogId);\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"comment\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n        />\n        <button type=\"submit\">add comment</button>\n      </form>\n      <hr />\n      {comments && comments.map((c) => <SingleComment key={c} commentId={c} />)}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Comments);\n","import React from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport Comments from './Comments';\nimport {\n  likePost,\n  removePost,\n  selectPostById,\n} from '../../reducers/postsSlice';\n\nconst BlogView = ({ user, match }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const postId = match.params.id;\n  const blog = useSelector((state) => selectPostById(state, postId));\n\n  const like = () => {\n    const likedBlog = {\n      _id: blog.id,\n      likes: blog.likes,\n    };\n    dispatch(likePost(likedBlog));\n  };\n\n  const remove = async () => {\n    if (blog.user.id !== user.id) {\n      console.log(user.id);\n      console.log(blog);\n      dispatch(\n        changeNotification(\n          `You are not authorized to delete this post`,\n          3000,\n          true\n        )\n      );\n      return;\n    }\n\n    if (window.confirm(`Do you really want to delete \"${blog.title}\"?`)) {\n      const blogObject = {\n        id: blog.id,\n      };\n      dispatch(removePost(blogObject));\n      history.push('/');\n    }\n  };\n\n  return (\n    <div>\n      <span>\n        <h1>{blog.title}</h1>\n        <p>\n          posted by <Link to={`/users/${blog.user.id}`}>{blog.author}</Link> at{' '}\n        </p>\n      </span>\n      <p>{blog.post}</p>\n      <br />\n      <p>\n        Likes: {blog.likes}\n        <button onClick={like} type=\"button\">\n          like\n        </button>\n      </p>\n      <p />\n      <button onClick={remove} type=\"button\">\n        delete\n      </button>\n      <Comments blogId={blog.id} blogComments={blog.comments} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(BlogView);\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { loginUser } from '../reducers/userReducer';\nimport { changeNotification } from '../reducers/notificationReducer';\nimport formStyles from './common/formStyles';\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    let mounted = true;\n    if (mounted === true) {\n      try {\n        dispatch(changeNotification('You have successfully logged in!', 3000));\n        setUsername('');\n        setPassword('');\n        await dispatch(loginUser(username, password));\n        history.push('/');\n      } catch (exception) {\n        dispatch(changeNotification('Incorrect credentials', 3000, true));\n        setUsername('');\n        setPassword('');\n      }\n    }\n    return () => (mounted = false);\n  };\n\n  const classes = formStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleLogin} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            label=\"Username\"\n            name=\"Username\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            label=\"Password\"\n            name=\"Password\"\n            autoComplete=\"on\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            id=\"login-button\"\n          >\n            Sign In\n          </Button>\n          Don't have an account?\n          <Link to=\"/register\" style={{ marginLeft: '1rem' }}>\n            Register now\n          </Link>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const navStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navItem: {\n    marginRight: theme.spacing(2),\n    textDecoration: 'none',\n    color: theme.palette.secondary.main,\n  },\n  avatar: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  backgroundColor: 'transparent',\n  logoutButton: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n}));\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport { logoutUser } from '../../reducers/userReducer';\nimport { changeNotification } from '../../reducers/notificationReducer';\nimport { navStyles } from './NavStyles';\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const classes = navStyles();\n  const user = useSelector((state) => state.user);\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    window.localStorage.clear();\n    dispatch(changeNotification('Successfully logged out!', 3000));\n  };\n\n  return (\n    <AppBar>\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title}>\n          <Link color=\"secondary\" to=\"/\" className={classes.navItem}>\n            Posts\n          </Link>\n          <Link color=\"secondary\" to=\"/users\" className={classes.navItem}>\n            Users\n          </Link>\n        </Typography>\n        <Avatar className={classes.avatar}>\n          <Typography variant=\"h5\">{user.name[0]}</Typography>\n        </Avatar>\n        <Button\n          className={classes.logoutButton}\n          color=\"inherit\"\n          onClick={handleLogout}\n        >\n          Logout\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { loginUser, registerUser } from '../reducers/userReducer';\nimport { changeNotification } from '../reducers/notificationReducer';\nimport { initializeUsers } from '../reducers/usersReducer';\nimport formStyles from './common/formStyles';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const handleRegistration = async (event) => {\n    event.preventDefault();\n    let mounted = true;\n    if (mounted === true) {\n      try {\n        history.push('/');\n\n        await dispatch(registerUser(name, username, password));\n        await dispatch(initializeUsers());\n        await dispatch(loginUser(username, password));\n\n        dispatch(changeNotification('You have successfully logged in!', 3000));\n        setUsername('');\n        setPassword('');\n      } catch (exception) {\n        dispatch(changeNotification('Incorrect credentials', 3000, true));\n        setUsername('');\n        setPassword('');\n      }\n    }\n    return () => (mounted = false);\n  };\n\n  const classes = formStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register New Account\n        </Typography>\n        <form className={classes.form} onSubmit={handleRegistration} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            type=\"text\"\n            value={name}\n            label=\"Name\"\n            name=\"Name\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setName(target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            label=\"Username\"\n            name=\"Username\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            label=\"Password\"\n            name=\"Password\"\n            autoComplete=\"on\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            id=\"login-button\"\n          >\n            Sign In\n          </Button>\n          <Link to=\"/\">Back to login</Link>\n        </form>\n      </div>\n    </Container>\n  );\n};\nexport default RegisterForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport blogService from './services/blogs';\nimport Bloglist from './components/Blogs/Bloglist';\nimport Notification from './components/Notification';\nimport NewBlogForm from './components/Blogs/NewBlogForm';\nimport { fetchPosts } from './reducers/postsSlice';\nimport UsersView from './components/UsersView/UsersView';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport { initializeUsers } from './reducers/usersReducer';\nimport BlogView from './components/Blogs/BlogView';\nimport LoginForm from './components/LoginForm';\nimport NavBar from './components/Nav/NavBar';\nimport RegisterForm from './components/RegisterForm';\nimport { alreadyLoggedIn } from './reducers/userReducer';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const blogs = useSelector((state) => Object.values(state.posts.entities));\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(initializeUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // takes user's username ato find current user and log them in\n      dispatch(alreadyLoggedIn(user));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      window.localStorage.setItem('loggedInAppUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n    }\n  }, [user]);\n\n  const matchUser = useRouteMatch('/users/:id');\n  const searchedUser = matchUser\n    ? users.find((user) => user.id === matchUser.params.id)\n    : null;\n  const matchBlog = useRouteMatch('/blogs/:id');\n  const searchedBlog = matchBlog\n    ? blogs.find((b) => b.id === matchBlog.params.id)\n    : null;\n\n  const useStyles = makeStyles((theme) => ({\n    marginDiv: {\n      marginTop: theme.spacing(12),\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Notification user=\"\" />\n      {user === null ? (\n        <div>\n          <Switch>\n            <Route path=\"/register\">\n              <RegisterForm />\n            </Route>\n            <Route path=\"/\">\n              <LoginForm />\n            </Route>\n          </Switch>\n        </div>\n      ) : (\n        <Container maxWidth=\"md\">\n          <NavBar />\n          <div className={classes.marginDiv}>\n            <Switch>\n              <Route exact path=\"/blogs/:id\" component={BlogView} />\n              <Route path=\"/users/:id\">\n                <UserProfile user={searchedUser} />\n              </Route>\n              <Route path=\"/users\">\n                <UsersView />\n              </Route>\n              <Route path=\"/create\">\n                <NewBlogForm user={user} />\n              </Route>\n              <Route path=\"/register\">\n                <RegisterForm />\n              </Route>\n              <Route exact path=\"/\" component={Bloglist} />\n            </Switch>\n          </div>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport theme from './theme';\nimport store from './store';\nimport App from './App';\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}