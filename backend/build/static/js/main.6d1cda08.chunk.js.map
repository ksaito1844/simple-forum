{"version":3,"sources":["services/blogs.js","components/Bloglist.js","components/Notification.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/common/formStyles.js","components/NewBlogForm.js","services/users.js","components/User.js","components/UsersView.js","components/UserProfile.js","reducers/usersReducer.js","components/BlogView.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","components/NavBar.js","components/RegisterForm.js","App.js","store.js","theme.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","put","url","_id","comment","incomingComment","blogId","remove","console","log","delete","setToken","newToken","reUsableStyle","border","marginBottom","borderRadius","useClasses","makeStyles","theme","listItemContainer","padding","listItem","textDecoration","color","listItemSubtitle","inputContainer","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","textField","width","marginLeft","marginRight","backgroundColor","input","Blog","blog","classes","to","id","className","Box","Typography","variant","author","createdAt","title","connect","state","blogs","history","useHistory","blogsCopy","sort","b","moment","diff","TextField","margin","required","type","label","name","autoComplete","onFocus","push","map","key","Notification","useState","open","setOpen","notification","useSelector","message","isErrorMessage","isError","useEffect","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","changeNotification","content","time","dispatch","Promise","resolve","setTimeout","notificationReducer","action","createBlog","returnedBlog","blogService","newBlog","blogReducer","idToLike","blogToLike","find","likedBlog","likes","idToComment","blogToCommentOn","changedBlog","comments","filteredBlogs","filter","formStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","palette","secondary","main","form","button","propTypes","user","PropTypes","string","isRequired","NewBlogForm","setNewBlog","useDispatch","handleSubmit","date","format","preventDefault","newBlogObject","Container","maxWidth","component","onSubmit","fullWidth","placeholder","value","autoFocus","onChange","target","Button","register","credentials","User","length","UsersView","users","setUsers","getUsers","userService","then","result","catch","err","UserProfile","usersBlogs","username","initializeUsers","usersService","usersReducer","setComment","howLongAgo","fromNow","createComment","updatedBlog","addComment","href","onClick","blogObject","window","confirm","deleteBlog","e","i","style","borderBottom","login","loginUser","password","loginService","registerUser","userReducer","LoginForm","props","setUsername","setPassword","handleLogin","Avatar","noValidate","NavBar","root","flexGrow","navItem","height","getContrastText","logoutButton","AppBar","Toolbar","localStorage","clear","RegisterForm","setName","handleRegisteration","App","loggedUserJSON","getItem","JSON","parse","alreadyLoggedIn","setItem","stringify","matchUser","useRouteMatch","searchedUser","params","matchBlog","searchedBlog","marginDiv","useStyles","path","rootReducer","combineReducers","persistConfig","version","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","createMuiTheme","primary","error","success","persistor","persistStore","ReactDOM","render","loading","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6d1cda08.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst put = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const url = `${baseUrl}/${newObject._id}`\n  const response = await axios.put(url, newObject, config)\n  return response.data\n}\n\nconst comment = async (incomingComment, blogId) => {\n  const url = `${baseUrl}/${blogId}/comments`\n  const response = await axios.post(url, incomingComment)\n  return response.data\n}\n\nconst remove = async newObject => {\n  const config = {\n    headers: { Authorization: token},\n  }\n  console.log(newObject)\n  const url = `${baseUrl}/${newObject._id}`\n  const response = await axios.delete(url, config)\n  return response.data\n}\n\nexport default { getAll, create, put, remove, setToken, comment }","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport moment from 'moment'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\nconst reUsableStyle = {\n  border: '1px solid #BDC3C7',\n  '&:hover': {\n    border: '1px solid black'\n  },\n  marginBottom: 16,\n  borderRadius: 6,\n}\n\nconst useClasses = makeStyles(theme => ({\n  listItemContainer: {\n    padding: 24,\n    border: reUsableStyle.border,\n    marginBottom: reUsableStyle.marginBottom,\n    '&:hover': reUsableStyle['&:hover'],\n    borderRadius: reUsableStyle.borderRadius\n  },\n  listItem: {\n    textDecoration: 'none',\n    color: '#000',\n  },\n  listItemSubtitle: {\n    color: '#BDC3C7'\n  },\n  inputContainer: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    paddingTop: 8,\n    paddingBottom: 8,\n    border: reUsableStyle.border,\n    marginBottom: reUsableStyle.marginBottom,\n    borderRadius: reUsableStyle.borderRadius,\n    textAlign: 'center'\n  },\n  textField: {\n    width: '75%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: 'rgb(246,247,248)',\n  },\n  input: {\n    border: 'none'\n  }\n}))\n\nexport const Blog = ({ blog }) => {\n\n  const classes = useClasses()\n\n  return (\n    <Link to={`/blogs/${blog.id}`}\n          className={classes.listItem}\n    >\n      <Box className={classes.listItemContainer}>\n        <Typography variant='body2'\n        >\n          posted by {blog.author} {blog.createdAt}\n        </Typography>\n\n        <Typography variant='h5'>\n          {blog.title}\n        </Typography>\n      </Box>\n    </Link>\n  )\n}\n\nconst Bloglist = ({ blogs }) => {\n  const classes = useClasses()\n  const history = useHistory()\n  const blogsCopy = [...blogs].sort((a, b) => {\n    return moment(b.createdAt, 'YYYY-MM-DD HH:mm:ss').diff(a.createdAt, 'YYYY-MM-DD HH:mm:ss')\n  })\n\n  return (\n    <div>\n      <Box className={classes.inputContainer}>\n        <TextField\n          variant='outlined'\n          margin='normal'\n          required\n          id='newPost'\n          type='text'\n          label=\"Create Post\"\n          name='New Post'\n          autoComplete=\"on\"\n          className={classes.textField}\n          onFocus={() => history.push('/create')}\n        />\n      </Box>\n      {blogsCopy\n        // sorts blogs by most likes\n        // .sort((a, b) => {return b.likes - a.likes})\n        .map(blog =>\n          <Blog\n            key={blog.id}\n            blog={blog}\n          />\n        )\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs\n  }\n}\n\nexport default connect(mapStateToProps)(Bloglist)","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport '../App.css'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport { Alert } from '@material-ui/lab'\n\nconst Notification = () => {\n  const [open, setOpen] = useState(false)\n  const notification = useSelector(state => state.notification.message)\n  const isErrorMessage = useSelector(state => state.notification.isError)\n\n  useEffect(() => {\n    if (notification !== '') {\n      setOpen(true)\n    }\n  }, [notification])\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  if (notification === '') {return null} else return (\n    <Snackbar open={open}\n              autoHideDuration={6000}\n              onClose={handleClose}\n    >\n      <Alert onClose={handleClose}\n             severity={isErrorMessage ? 'error' : 'success'}\n      >\n        {notification}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default Notification","const notificationReducer = (state = {message: '', isError: false}, action) => {\n  switch (action.type) {\n    case 'NEW_NOTIFICATION':\n      return action\n    default:\n      return state\n  }\n}\n\nexport const changeNotification = (content, time, isError = false) => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEW_NOTIFICATION',\n      message: content,\n      isError: isError\n    })\n    return new Promise(resolve => {\n      setTimeout(() => {\n        dispatch({\n          type: 'NEW_NOTIFICATION',\n          message: '',\n          isError: false,\n        })\n      }, time)\n    })\n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'NEW_NOTIFICATION',\n    content: '',\n  }\n}\n\nexport default notificationReducer","import blogService from '../services/blogs'\nimport { changeNotification } from './notificationReducer'\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data\n    case 'ADD_BLOG':\n      return [...state, action.data]\n    case 'LIKE':\n      const idToLike = action.data.id\n      const blogToLike = state.find(b => b.id === idToLike)\n      const likedBlog = {\n        ...blogToLike,\n        likes: blogToLike.likes + 1\n      }\n      return state.map(\n        blog => blog.id !== idToLike ? blog : likedBlog\n      )\n    case 'COMMENT':\n      const idToComment = action.data.id\n      const blogToCommentOn = state.find(b => b.id === idToComment)\n      const changedBlog = {\n        ...blogToCommentOn,\n        comments: action.data.comments\n      }\n      return state.map(\n        blog => blog.id !== idToComment ? blog : changedBlog\n      )\n    case 'DELETE_BLOG':\n      const filteredBlogs = state.filter(blog => blog.id !== action.data._id)\n      return filteredBlogs\n    default :\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = (returnedBlog) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(returnedBlog)\n    dispatch({\n      type: 'ADD_BLOG',\n      data: newBlog\n    })\n  }\n}\n\nexport const likeBlog = (blogObject,) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.put(blogObject)\n    await dispatch({\n      type: 'LIKE',\n      data: updatedBlog\n    })\n    dispatch(changeNotification(`You liked ${blogObject.author}'s post`, 3000))\n  }\n}\n\nexport const addComment = (incomingComment, blogId) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.comment(incomingComment, blogId)\n    console.log(updatedBlog)\n    await dispatch({\n      type: 'COMMENT',\n      data: updatedBlog\n    })\n  }\n}\n\nexport const deleteBlog = (blogObject) => {\n  return async dispatch => {\n    await blogService.remove(blogObject)\n    await dispatch({\n      type: 'DELETE_BLOG',\n      data: blogObject\n    })\n    dispatch(changeNotification(`You deleted the post title: ${blogObject.title}`, 3000))\n  }\n}\n\nexport default blogReducer","import { makeStyles } from '@material-ui/core/styles'\n\nconst formStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nexport default formStyles;\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Notification from './Notification'\nimport { changeNotification } from '../reducers/notificationReducer'\nimport { createBlog } from '../reducers/blogReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { useHistory } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\nimport formStyles from './common/formStyles'\n\nconst NewBlogForm = ({ user }) => {\n  const blogs = useSelector(state => state.blogs)\n  const [newBlog, setNewBlog] = useState({ title: '', url: '' })\n  const dispatch = useDispatch()\n  let history = useHistory()\n\n  useEffect(() => {\n\n  }, [blogs])\n\n  const handleSubmit = async (event) => {\n    const date = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    event.preventDefault()\n    const newBlogObject = {\n      title: newBlog.title,\n      url: newBlog.url,\n      author: user,\n      createdAt: date\n    }\n    await dispatch(createBlog(newBlogObject))\n    dispatch(changeNotification(`Your new blog titled: \"${newBlogObject.title}\" has been added to the server!`, 3000))\n    history.push(`/blogs`)\n    setNewBlog({ title: '', url: '' })\n  }\n\n  const classes = formStyles()\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Typography component=\"h1\"\n                    variant=\"h5\"\n        >\n          New Post\n        </Typography>\n        <form className={classes.form}\n              onSubmit={handleSubmit}\n        >\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='title'\n            placeholder='Title'\n            type=\"text\"\n            value={newBlog.title}\n            name=\"Title\"\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setNewBlog((newBlog) => ({ ...newBlog, title: target.value }))}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='url'\n            placeholder='Url'\n            type=\"text\"\n            value={newBlog.url}\n            name=\"Url\"\n            onChange={({ target }) => setNewBlog((newBlog) => ({ ...newBlog, url: target.value }))}\n            autoComplete=\"on\"\n          />\n          <Button\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.button}\n            type='submit'\n            id='login-button'\n          >Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  )\n}\n\nNotification.propTypes = {\n  user: PropTypes.string.isRequired,\n}\n\nexport default NewBlogForm","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst register = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { getAll, register }","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst User = ({ user }) => {\n  return (\n    <div>\n      <p><Link to={`users/${user.id}`}>{user.name}</Link>: <strong>blogs created:</strong> {user.blogs.length}</p>\n    </div>\n  )\n}\n\nexport default User","import React, { useEffect, useState } from 'react'\nimport userService from '../services/users'\nimport User from './User'\n\nconst UsersView = () => {\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n  const getUsers = () => {\n    return userService.getAll().then(result => {\n      setUsers(result)\n    })\n      .catch(err => {\n        console.log('something went wrong!')\n        console.log(err)\n      })\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <hr/>\n      <div>\n        {users.map(user =>\n            <User\n              key={user.id}\n              user={user}\n            />\n        )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UsersView","import React from 'react'\nimport {\n  Link,\n} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport {Blog} from './Bloglist'\n\nconst UserProfile = ({user}) => {\n  const blogs = useSelector(state => state.blogs)\n  const usersBlogs = blogs.filter(b => b.author === user.name)\n\n  return (\n    <div>\n      <h2>{user.username}</h2>\n      <br/>\n      <hr/>\n      <div>\n        <h4>Information:</h4>\n        <br/>\n        <p><strong>Name:</strong> {user.name}</p>\n        <br/>\n        <h4>Blog Posts:</h4>\n        <br/>\n        <ul>\n          {usersBlogs\n            .map(blog =>\n              <li>\n                <Link to={`/blogs/${blog.id}`}\n                      key={blog.id}\n                >\n                  <Blog\n                    blog={blog}\n                  />\n                </Link>\n              </li>\n            )\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default UserProfile","import usersService from '../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n    default :\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users\n    })\n  }\n}\n\n\n\n\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport moment from 'moment'\nimport { addComment, deleteBlog, likeBlog } from '../reducers/blogReducer'\nimport { changeNotification } from '../reducers/notificationReducer'\n\nconst BlogView = ({ blog, user }) => {\n  const [comment, setComment] = useState('')\n  const dispatch = useDispatch()\n  let history = useHistory()\n\n  const howLongAgo = moment(blog.createdAt, \"YYYY-MM-DD HH:mm:ss\").fromNow();\n\n  const like = () => {\n    const likedBlog = {\n      user: blog.user.id,\n      likes: blog.likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      _id: blog.id\n    }\n    dispatch(likeBlog(likedBlog))\n  }\n\n  const remove = () => {\n    if (blog.user.id !== user.id) {\n      dispatch(changeNotification(`You are not authorized to delete this post`, 3000, true))\n      return\n    }\n\n    if (window.confirm(`Do you really want to delete \"${blog.title}\"?`)) {\n      const blogObject = {\n        user: blog.user.id,\n        author: blog.author,\n        title: blog.title,\n        url: blog.url,\n        _id: blog.id\n      }\n      history.push('/')\n      dispatch(deleteBlog(blogObject))\n    }\n  }\n\n  const createComment = (event, blogId) => {\n    event.preventDefault()\n    const newComment = { comment: comment }\n    dispatch(addComment(newComment, blogId))\n    dispatch(changeNotification(`Your comment has been added`, 3000))\n\n  }\n\n\n\n  return (\n    <div>\n      <h1>{blog.title}</h1>\n      <p><a href={blog.url}>{blog.url}</a></p>\n      <br/>\n      <p>Likes: {blog.likes}\n        <button onClick={like}>like</button>\n      </p>\n      <p>added by <Link to={`/users/${blog.user.id}`}>{blog.author}</Link> at {howLongAgo}</p>\n      <button onClick={remove}>delete</button>\n\n      <hr/>\n      <br/>\n      <div>\n        <h3>{blog.title}</h3>\n        <br/>\n        <p>This is the blog's content.</p>\n      </div>\n      <div>\n        <h3>Comments:</h3>\n        <form onSubmit={(e) => {createComment(e, blog.id)}}>\n          <input type='text'\n                 name='comment'\n                 value={comment}\n                 onChange={({ target }) => setComment(target.value)}\n          />\n          <button type='submit'>add comment</button>\n        </form>\n        <hr/>\n        {blog.comments.map((comment, i) =>\n          <div style={{ borderBottom: '1px solid black', marginBottom: '1em' }}\n               key={i}\n          >\n            <p style={{ marginLeft: '3em' }}>{comment.comment}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps)(BlogView)","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  if (credentials.token) {\n\n  }\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import loginService from '../services/login'\nimport usersService from '../services/users'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return action.data\n    case 'REGISTER':\n      return action.data\n    case 'ALREADY_LOGGED_IN':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    const user = await loginService.login({\n      username, password\n    })\n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'LOGOUT',\n      data: null\n    })\n  }\n}\n\nexport const registerUser = (name, username, password) => {\n  return async dispatch => {\n    const user = await usersService.register({\n      name, username, password\n    })\n    console.log(user)\n    dispatch({\n      type: 'REGISTER',\n      data: user\n    })\n  }\n}\n\nexport const alreadyLoggedIn = (user) => {\n  return async dispatch => {\n    dispatch({\n      type: 'ALREADY_LOGGED_IN',\n      data: user\n    })\n  }\n}\n\nexport default userReducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { changeNotification } from '../reducers/notificationReducer'\nimport { loginUser } from '../reducers/userReducer'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport formStyles from './common/formStyles'\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  let history = useHistory()\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    let mounted = true\n    if (mounted === true) {\n      try {\n        dispatch(changeNotification('You have successfully logged in!', 3000))\n        setUsername('')\n        setPassword('')\n        await dispatch(loginUser(username, password))\n        history.push('/')\n\n      } catch (exception) {\n        dispatch(changeNotification('Incorrect credentials', 3000, true))\n        setUsername('')\n        setPassword('')\n      }\n    }\n    return () => mounted = false\n  }\n\n  const classes = formStyles()\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon/>\n        </Avatar>\n        <Typography component=\"h1\"\n                    variant=\"h5\"\n        >\n          Sign in\n        </Typography>\n        <form className={classes.form}\n              onSubmit={handleLogin}\n              noValidate\n        >\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='username'\n            type='text'\n            value={username}\n            label=\"Username\"\n            name='Username'\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='password'\n            type='password'\n            value={password}\n            label=\"Password\"\n            name='Password'\n            autoComplete=\"on\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.button}\n            type='submit'\n            id='login-button'\n          >Sign In\n          </Button>\n          Don't have an account?\n          <Link to='/register'\n                style={{ marginLeft: '1rem' }}\n          >\n            Register now\n          </Link>\n        </form>\n      </div>\n    </Container>\n  )\n}\n\nexport default LoginForm","import AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { logoutUser } from '../reducers/userReducer'\nimport { changeNotification } from '../reducers/notificationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst NavBar = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n  const handleLogout = () => {\n    dispatch(logoutUser())\n    window.localStorage.clear()\n    dispatch(changeNotification('Successfully logged out!', 3000))\n  }\n\n  const useClasses = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n    },\n    navItem: {\n      marginRight: theme.spacing(2),\n      textDecoration: 'none',\n      color: theme.palette.secondary.main\n    },\n    avatar: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      color: theme.palette.getContrastText(theme.palette.secondary.main),\n      backgroundColor: theme.palette.secondary.main\n    },\n    backgroundColor: 'transparent',\n    logoutButton: {\n      '&:hover': {\n        backgroundColor: 'transparent',\n      }\n    }\n  }))\n  const classes = useClasses()\n\n  return (\n    <AppBar>\n      <Toolbar>\n        <Typography variant=\"h5\"\n                    className={classes.title}\n        >\n          <Link color='secondary'\n                to=\"/\"\n                className={classes.navItem}\n          >Blogs</Link>\n          <Link color='secondary'\n                to=\"/users\"\n                className={classes.navItem}\n          >Users</Link>\n        </Typography>\n        <Avatar\n          className={classes.avatar}\n        >\n          <Typography variant='h5'>\n            {user.name[0]}\n          </Typography>\n        </Avatar>\n        <Button\n            className={classes.logoutButton}\n          color=\"inherit\"\n                onClick={handleLogout}\n        >Logout</Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default NavBar","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { changeNotification } from '../reducers/notificationReducer'\nimport { loginUser, registerUser } from '../reducers/userReducer'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { initializeUsers } from '../reducers/usersReducer'\nimport formStyles from './common/formStyles'\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  let history = useHistory()\n\n  const handleRegisteration = async (event) => {\n    event.preventDefault()\n    let mounted = true\n    if (mounted === true) {\n      try {\n        history.push('/')\n\n        await dispatch(registerUser(name, username, password))\n        await dispatch(initializeUsers())\n        await dispatch(loginUser(username, password))\n\n        dispatch(changeNotification('You have successfully logged in!', 3000))\n        setUsername('')\n        setPassword('')\n\n      } catch (exception) {\n        dispatch(changeNotification('Incorrect credentials', 3000, true))\n        setUsername('')\n        setPassword('')\n      }\n    }\n    return () => mounted = false\n  }\n\n  const classes = formStyles()\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon/>\n        </Avatar>\n        <Typography component=\"h1\"\n                    variant=\"h5\"\n        >\n          Register New Account\n        </Typography>\n        <form className={classes.form}\n              onSubmit={handleRegisteration}\n              noValidate\n        >\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='name'\n            type='text'\n            value={name}\n            label=\"Name\"\n            name='Name'\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setName(target.value)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='username'\n            type='text'\n            value={username}\n            label=\"Username\"\n            name='Username'\n            autoComplete=\"on\"\n            autoFocus\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='password'\n            type='password'\n            value={password}\n            label=\"Password\"\n            name='Password'\n            autoComplete=\"on\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.button}\n            type='submit'\n            id='login-button'\n          >Sign In\n          </Button>\n          <Link to='/'\n          >\n            Back to login\n          </Link>\n        </form>\n      </div>\n    </Container>\n  )\n}\nexport default RegisterForm","import React, { useEffect } from 'react'\nimport blogService from './services/blogs'\nimport Bloglist from './components/Bloglist'\nimport Notification from './components/Notification'\nimport NewBlogForm from './components/NewBlogForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeBlogs } from './reducers/blogReducer'\nimport UsersView from './components/UsersView'\nimport {\n  Switch, Route, useRouteMatch\n} from 'react-router-dom'\nimport UserProfile from './components/UserProfile'\nimport { initializeUsers } from './reducers/usersReducer'\nimport BlogView from './components/BlogView'\nimport { Container } from '@material-ui/core'\nimport LoginForm from './components/LoginForm'\nimport { makeStyles } from '@material-ui/core/styles'\nimport NavBar from './components/NavBar'\nimport RegisterForm from './components/RegisterForm'\nimport { alreadyLoggedIn } from './reducers/userReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const blogs = useSelector(state => state.blogs)\n  const users = useSelector(state => state.users)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      // takes user's username ato find current user and log them in\n      dispatch(alreadyLoggedIn(user))\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    if (user) {\n      window.localStorage.setItem(\n        'loggedInAppUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n    }\n  }, [user])\n\n  const matchUser = useRouteMatch('/users/:id')\n  const searchedUser = matchUser\n    ? users.find(user => user.id === matchUser.params.id)\n    : null\n  const matchBlog = useRouteMatch('/blogs/:id')\n  const searchedBlog = matchBlog\n    ? blogs.find(b => b.id === matchBlog.params.id)\n    : null\n\n  const useStyles = makeStyles((theme) => ({\n    marginDiv: {\n      marginTop: theme.spacing(12)\n    },\n  }))\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Notification user={''}/>\n      {user === null\n        ?\n        <div>\n          <Switch>\n            <Route path=\"/register\">\n              <RegisterForm/>\n            </Route>\n            <Route path=\"/\">\n              <LoginForm/>\n            </Route>\n          </Switch>\n        </div>\n        :\n        <Container maxWidth='md'>\n          <NavBar/>\n          <div className={classes.marginDiv}>\n            <Switch>\n              <Route path=\"/blogs/:id\">\n                <BlogView blog={searchedBlog}/>\n              </Route>\n              <Route path=\"/users/:id\">\n                <UserProfile user={searchedUser}/>\n              </Route>\n              <Route path='/users'>\n                <UsersView/>\n              </Route>\n              <Route path='/create'>\n                <NewBlogForm user={user}/>\n              </Route>\n              <Route path='/register'>\n                <RegisterForm/>\n              </Route>\n              <Route path=\"/\">\n                <Bloglist />\n              </Route>\n            </Switch>\n          </div>\n\n        </Container>\n      }\n    </div>\n  )\n}\n\nexport default App","import { combineReducers } from 'redux'\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\nimport usersReducer from './reducers/usersReducer'\nimport {\n  persistReducer, FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nconst rootReducer = combineReducers({\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: userReducer,\n  users: usersReducer\n})\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n  stateReconciler: autoMergeLevel2,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n})\n\nexport default store","import {createMuiTheme} from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#CBF3F0\",\n    },\n    secondary: {\n      main: \"#FFBF69\",\n    },\n    error: {\n      main: \"#FF9F1C\"\n    },\n    success: {\n      main: \"#2EC4B6\"\n    },\n  }\n})\n\nexport default theme","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <App/>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </Router>,\n  document.getElementById('root'))"],"sourceRoot":""}